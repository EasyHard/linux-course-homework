#title ext3, ext4, xfs, reizefs, zfs 的分析比较
#author 00948267 刘智猷

** ext3
ext3作为从ext2上发展起来的日志式文件系统(journaled file system)， 最大的优点在于可以将ext2分区直接升级到ext格式，不需要将数据拷出再拷入。通常来说，大家认为ext3的性能与ext4、JFS、ReiserFS或者是XFS等设计更为现代的文件系统相比较差。同时，也有人认为ext3比别的文件系统的实现更为健壮因为其设计较为简单，而且经过了长时间的，广泛的测试。

ext3的劣势在于：
    1. 其并不支持block内分配（block suballocation），这使得ext3对磁盘空间的利用率较低。
    2. 其不支持动态分配inodes，这使得在ext3中一个目录下的总文件数存在一个限制。
    3. 其没有简单高效的快照（snapshots）功能，只能依赖于磁盘空间效率更低的其他手段。
    4. 日志并不进行校验（check sum），这将在一些情况下导致竞态。
    5. 对于block大小为1kb的磁盘，其最大支持16G的文件，在蓝光镜像日益普及的今天，很难说够用。当然，对于block大小为4kb的磁盘，这样的问题几乎是不存在的。

** ext4
ext4是ext3的后继。其保留了一定地向后兼容能力。一个ext3分区也可以当成是ext4分区来挂载，只是某些ext4的特性将不会启用。

相比与ext3,ext4引入了一些更前卫的技术,以其实现一个性能和功能都更优秀的文件系统。
    1. 其使用extents而不是block作为文件存储位置的表达方式。
    2. 其支持一种快速的预分配大小，而不需要向磁盘中写入同样多的0.
    3. 日志支持校验（check sum），这避免了一些ext3中的竞态的发生。
    4. 支持一次分配多个block，这有助于减少内碎片。
    5. 时间戳（timestamp）可表示的时间比ext3中延长了204年，在ext3中，timestamp不能超过2038年。

** xfs
xfs是一个日志式文件系统。在其设计中，其将一个文件系统在内部划分为allocation groups，每个allocation groups是等大小的线性区域。文件和目录依然可以横跨多个allocation groups。但是，由于每个allocation groups独立维护自己的inodes和空闲空间，这提供了更多的并行度和可扩展性。这样，xfs在多线程情况下的性能表现更好。

除此之外，xfs还支持一些有趣的特性：
     1. 其支持一种Direct I/O方式，在用户空间的程序可以通过这一方式直接使用DMA将磁盘上的数据拷贝到buf中。
     2. Guaranteed-rate I/O，用户程序可以指明本次I/O的要求的速率。xfs会保证该速率得到满足。这是特性从未在其他文件系统中出现。
测试表明，xfs在线程数多的情况下，其性能优于ext4。

** reizefs（ReiserFS version 3）
reizefs是第一个被linux内核支持的日志式文件系统。其支持tail packing，可以节省一些空间，但该特性的性能并不好。作为一个实现得比较早的文件系统，许多人对其提出了批评。
     1. 一些目录操作是不同步的，这就导致一些基于文件锁的程序出现竞态。
     2. 由于reizefs目录树的存储位置设计与其他系统不同。它的fsck有一些不方便的规定。例如，不能在reizefs上放一个不经处理的reizefs文件系统分区的映像。

** zfs
zfs是sun公司推出的一款文件系统, 经常用在Solaris上。其在设计时就着重考虑保证数据的完整性，可以在一定程度上进行自检验和自修正。同时，其提供的修复工具scrub可以在文件系统仍然在工作的情况下，对文件系统进行检验和修复。其另一个特点是支持写时复制。也就是说，复制一个文件并不需要消耗很大的空间，只有在文件被修改时，才会对数据进行真正的复制。由于有了这样一个技术，在zfs上做快照的很简单，代价也不大。

* 参考文献
***** 维基百科相关条目
***** Linux源代码linux-2.6.39.1/Documentation中与文件系统有关的部分文件。
